{"repo_url": "https://github.com/coleifer/micawber", "commit_hash": "749f32825eedcdea69be9eb874d9ded0bd227dc3", "samples": [{"description": "            '''od.popitem() -> (k, v), return and remove a (key, value) pair.\n            Pairs are returned in LIFO order if last is true or FIFO order if false.\n", "documentation": {}, "filename": "micawber/compat.py", "related_lines": {"39,76": [15, 16]}, "snippet_lines": ["            if not self:\n", "                raise KeyError('dictionary is empty')\n", "            root = self.__root\n", "            if last:\n", "                link = root[0]\n", "                link_prev = link[0]\n", "                link_prev[1] = root\n", "                root[0] = link_prev\n", "            else:\n", "                link = root[1]\n", "                link_next = link[1]\n", "                root[1] = link_next\n", "                link_next[0] = root\n", "            key = link[2]\n", "            del self.__map[key]\n", "            value = dict.pop(self, key)\n", "            return key, value\n"], "start_line": 108}, {"description": "            '''od.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n            If key is not found, d is returned if given, otherwise KeyError is raised.\n", "documentation": {}, "filename": "micawber/compat.py", "related_lines": {"60,90": [3], "104,147": [6], "149,177": [4, 5], "35,55": [2]}, "snippet_lines": ["            if key in self:\n", "                result = self[key]\n", "                del self[key]\n", "                return result\n", "            if default is self.__marker:\n", "                raise KeyError(key)\n", "            return default\n"], "start_line": 194}]}