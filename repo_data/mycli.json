{"samples": [{"description": "    Return a function that generates the toolbar tokens.\n", "documentation": {}, "filename": "mycli/clitoolbar.py", "related_lines": {"4,55": [29]}, "snippet_lines": ["    token = Token.Toolbar\n", "\n", "    def get_toolbar_tokens(cli):\n", "        result = []\n", "        result.append((token, ' '))\n", "\n", "        if cli.buffers[DEFAULT_BUFFER].completer.smart_completion:\n", "            result.append((token.On, '[F2] Smart Completion: ON  '))\n", "        else:\n", "            result.append((token.Off, '[F2] Smart Completion: OFF  '))\n", "\n", "        if cli.buffers[DEFAULT_BUFFER].always_multiline:\n", "            result.append((token.On, '[F3] Multiline: ON  '))\n", "        else:\n", "            result.append((token.Off, '[F3] Multiline: OFF  '))\n", "\n", "        if cli.buffers[DEFAULT_BUFFER].always_multiline:\n", "            result.append((token,\n", "                ' (Semi-colon [;] will end the line)'))\n", "\n", "        if cli.editing_mode == EditingMode.VI:\n", "            result.append((token.On, '[F4] Vi-mode'))\n", "        else:\n", "            result.append((token.On, '[F4] Emacs-mode'))\n", "\n", "        if get_is_refreshing():\n", "            result.append((token, '     Refreshing completions...'))\n", "\n", "        return result\n", "    return get_toolbar_tokens\n"], "start_line": 8}, {"description": "    \"\"\"Read and merge a list of config files.\"\"\"\n", "documentation": {"ConfigObj": "An object to read, create, and write config files.", "merge": "This method is a recursive update method. It allows you to merge two config files together.", "read_config_file": "Read a config file."}, "filename": "mycli/config.py", "related_lines": {"7,44": [2, 3, 5]}, "snippet_lines": ["    config = ConfigObj()\n", "\n", "    for _file in files:\n", "        _config = read_config_file(_file)\n", "        if bool(_config) is True:\n", "            config.merge(_config)\n", "            config.filename = _config.filename\n", "\n", "    return config\n"], "start_line": 59}], "commit_hash": "a69bacce987dc8e4c5a5de71b882dbbf8949e916", "repo_url": "https://github.com/dbcli/mycli"}