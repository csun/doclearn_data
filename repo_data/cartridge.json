{"repo_url": "https://github.com/stephenmcd/cartridge", "commit_hash": "244bec069a12efc2ccf2efad6056a1b9323c39e3", "samples": [{"description": "    Removes values for the given session variables names\n    if they exist.\n", "documentation": {}, "filename": "cartridge/shop/utils.py", "related_lines": {"4,56": [0, 2]}, "snippet_lines": ["    for name in names:\n", "        try:\n", "            del request.session[name]\n", "        except KeyError:\n", "            pass\n"], "start_line": 31}, {"description": "    Stores the shipping type and total in the session.\n", "documentation": {"_str": "\n    A backport of the Python 3 str object to Py2\n    "}, "filename": "cartridge/shop/utils.py", "related_lines": {"4,53": [0, 1]}, "snippet_lines": ["    request.session[\"shipping_type\"] = _str(shipping_type)\n", "    request.session[\"shipping_total\"] = _str(shipping_total)\n"], "start_line": 77}, {"description": "    Stores the tax type and total in the session.\n", "documentation": {"_str": "\n    A backport of the Python 3 str object to Py2\n    "}, "filename": "cartridge/shop/utils.py", "related_lines": {"4,48": [0, 1]}, "snippet_lines": ["    request.session[\"tax_type\"] = _str(tax_type)\n", "    request.session[\"tax_total\"] = _str(tax_total)\n"], "start_line": 85}, {"description": "    Returns the hash of the given value, used for signing order key stored in\n    cookie for remembering address fields.\n", "documentation": {"hmac.new": "Create a new hashing object and return it.\n\n    key: The starting key for the hash.\n    msg: if available, will immediately be hashed into the object's starting\n    state.\n\n    You can now feed arbitrary strings into the object using its update()\n    method, and can ask for the hash value at any time by calling its digest()\n    method.\n    "}, "filename": "cartridge/shop/utils.py", "related_lines": {"4,39": [2]}, "snippet_lines": ["    key = bytes(settings.SECRET_KEY, encoding=\"utf8\")\n", "    value = bytes(value, encoding=\"utf8\")\n", "    return hmac.new(key, value, digest).hexdigest()\n"], "start_line": 94}]}