{"repo_url": "https://github.com/statsmodels/statsmodels", "commit_hash": "036ad9f769068a50d48048c889762a1e32e5eb1a", "samples": [{"description": "        \"\"\"Return None.  Labels cells based on `func`.\n        If ``func(cell) is None`` then its datatype is\n        not changed; otherwise it is set to ``func(cell)``.\n", "documentation": {}, "filename": "statsmodels/iolib/table.py", "related_lines": {"25,53": [1, 2], "131,168": [3, 4]}, "snippet_lines": ["        for row in self:\n", "            for cell in row:\n", "                label = func(cell)\n", "                if label is not None:\n", "                    cell.datatype = label\n"], "start_line": 475}, {"description": "    Load a previously saved object from file\n\n    Parameters\n    ----------\n    fname : str\n        Filename to unpickle\n\n    Notes\n    -----\n    This method can be used to load *both* models and results.\n", "documentation": {"get_file_obj": "\n    Light wrapper to handle strings and let files (anything else) pass through.\n\n    It also handle '.gz' files.\n\n    Parameters\n    ==========\n    fname: string or file-like object\n        File to open / forward\n    mode: string\n        Argument passed to the 'open' or 'gzip.open' function\n    encoding: string\n        For Python 3 only, specify the encoding of the file\n\n    Returns\n    =======\n    A file-like object that is always a context-manager. If the `fname` was already a file-like object,\n    the returned context manager *will not close the file*.\n    ", "cPickle.load": "load(file) -- Load a pickle from the given file"}, "filename": "statsmodels/iolib/smpickle.py", "related_lines": {"4,44": [1]}, "snippet_lines": ["    with get_file_obj(fname, 'rb') as fin:\n", "        return cPickle.load(fin)\n"], "start_line": 31}, {"description": "    Save the object to file via pickling.\n\n    Parameters\n    ----------\n    fname : str\n        Filename to pickle to\n", "documentation": {"cPickle.dump": "dump(obj, file, protocol=0) -- Write an object in pickle format to the given file.\n\nSee the Pickler docstring for the meaning of optional argument proto.", "get_file_obj": "\n    Light wrapper to handle strings and let files (anything else) pass through.\n\n    It also handle '.gz' files.\n\n    Parameters\n    ==========\n    fname: string or file-like object\n        File to open / forward\n    mode: string\n        Argument passed to the 'open' or 'gzip.open' function\n    encoding: string\n        For Python 3 only, specify the encoding of the file\n\n    Returns\n    =======\n    A file-like object that is always a context-manager. If the `fname` was already a file-like object,\n    the returned context manager *will not close the file*.\n    "}, "filename": "statsmodels/iolib/smpickle.py", "related_lines": {"4,40": [1]}, "snippet_lines": ["    with get_file_obj(fname, 'wb') as fout:\n", "        cPickle.dump(obj, fout, protocol=-1)\n"], "start_line": 14}]}